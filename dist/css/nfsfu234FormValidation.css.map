{"version":3,"sources":["../../src/css/nfsfu234FormValidation.css"],"names":[],"mappings":"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","file":"nfsfu234FormValidation.css","sourcesContent":["/* Define custom CSS variables */\r\n:root {\r\n    --success: #4caf50;           /* Define a custom variable for success color */\r\n    --failure: #f44336;         /* Define a custom variable for failure color */\r\n    --warning: #ff9800;      /* Define a custom variable for warning color */\r\n    --white: #ffffff;         /* Define a custom variable for white color */\r\n    --black: #000000;      /* Define a custom variable for black color */\r\n  }\r\n  \r\n  /* Utility class for relative positioning */\r\n  .relative-position {\r\n    position: relative !important; /* Apply relative positioning to the element */\r\n  }\r\n  \r\n  /* Utility class for background color indicating success */\r\n  .bgSuccess {\r\n    background: var(--success) !important; /* Set background color to the defined success color */\r\n    color: var(--white) !important;        /* Set text color to white */\r\n  }\r\n  \r\n  /* Utility class for text color indicating success */\r\n  .text-success {\r\n    color: var(--success) !important; /* Set text color to the defined success color */\r\n  }\r\n  \r\n  /* Utility class for background color indicating failure */\r\n  .fail {\r\n    background: var(--failure) !important; /* Set background color to the defined failure color */\r\n    color: var(--white) !important;        /* Set text color to white */\r\n  }\r\n  \r\n  /* Utility class for text color indicating failure */\r\n  .text-failure,\r\n  .text-fail {\r\n    color: var(--failure) !important; /* Set text color to the defined failure color */\r\n  }\r\n  \r\n  /* Utility class for background color indicating warning */\r\n  .warning {\r\n    background: var(--warning) !important; /* Set background color to the defined warning color */\r\n    color: var(--white) !important;        /* Set text color to white */\r\n  }\r\n  \r\n  /* Utility class for input focus with error */\r\n  .input-focus-error {\r\n    border: 1px solid var(--failure) !important; /* Set border color to the defined failure color */\r\n    color: var(--failure) !important;           /* Set text color to the defined failure color */\r\n  }\r\n  \r\n  /* Utility class for input focus with success */\r\n  .input-focus-success {\r\n    border: 1px solid var(--success) !important; /* Set border color to the defined failure color */\r\n    color: var(--success) !important;           /* Set text color to the defined failure color */\r\n  }\r\n  \r\n  /* Utility class for inline error message */\r\n  .js-inline-message {\r\n    color: var(--failure);         /* Set text color to the defined failure color */\r\n    font-size: calc(100% - 0.3rem); /* Reduce font size slightly compared to parent element */\r\n    text-transform: uppercase;     /* Convert text to uppercase */\r\n    display: block; \r\n    width: 100%;\r\n    margin: 5px 0;\r\n  }\r\n  \r\n  \r\n  \r\n  /* Styling for error container */\r\n  .js-errorMessageContainer {\r\n    position: absolute;         /* Absolute positioning to place it correctly */\r\n    top: 0;                     /* Position at the top of the container */\r\n    width: 100%;                /* Take the full width of the container */\r\n    height: max-content;        /* Adjust height based on content inside */\r\n  }\r\n  \r\n  /* Styling for login error message container */\r\n  .js-errorMessageContainer .login-error-message-container {\r\n    position: relative;         /* Relative positioning for child elements */\r\n    width: clamp(100%, 80vw, 300px); /* Width is responsive between 100% and 300px */\r\n    background: red;            /* Background color for error container */\r\n    color: #fff;                /* Text color for error message */\r\n    border-radius: 10px;        /* Rounded corners for the container */\r\n    border: 1.5px solid red !important;    /* Red border for the container */\r\n    overflow: hidden;           /* Hide overflowing content */\r\n    margin-bottom: 10px;       /* Add space at the bottom of the container */\r\n    /* margin-top: -100px; */   /* (Commented out) Adjust top margin if needed */\r\n    display: none;              /* Initially hide the container */\r\n    transition: 0.5s margin ease-in-out; /* Add smooth transition for margin */\r\n  }\r\n  \r\n  /* Styling for the message inside error container */\r\n  .js-errorMessageContainer .login-error-message-container .message {\r\n    width: calc(100% - 50px);   /* Calculate width minus icon space */\r\n    height: 100%;               /* Take full height of the container */\r\n    padding: 0 0.3rem;          /* Add padding to the message */\r\n    min-height: 50px;           /* Set minimum height for the container */\r\n    display: flex;              /* Display as flex for centering content */\r\n    align-items: center;        /* Center vertically */\r\n    justify-content: center;    /* Center horizontally */\r\n    letter-spacing: 1.5px;      /* Add letter spacing for uppercase text */\r\n    text-transform: uppercase;  /* Convert text to uppercase */\r\n    text-align: center;         /* Center text within the container */\r\n  }\r\n  \r\n  /* Styling for the icon inside error container */\r\n  .js-errorMessageContainer .login-error-message-container .icon {\r\n    position: absolute;         /* Absolute positioning for the icon */\r\n    top: 0;                     /* Position at the top of the container */\r\n    right: 0;                   /* Position at the right of the container */\r\n    height: 100%;               /* Take full height of the container */\r\n    width: 50px;                /* Set width for the icon space */\r\n    background: #fff;           /* Background color for the icon space */\r\n    color: red;                 /* Icon color (red for error) */\r\n    display: flex;              /* Display as flex for centering content */\r\n    align-items: center;        /* Center vertically */\r\n    justify-content: center;    /* Center horizontally */\r\n  }\r\n  \r\n  /* Styling for SVG icon inside error container */\r\n  .js-errorMessageContainer .login-error-message-container .icon svg {\r\n    height: 60%;                /* Set height of the SVG icon */\r\n    width: 60%;                 /* Set width of the SVG icon */\r\n    fill: currentColor;         /* Set SVG icon fill color to current color (red) */\r\n  }\r\n  \r\n  /* Styling for active state of the error container */\r\n  .js-errorMessageContainer .login-error-message-container.active {\r\n    display: block !important; /* Display the container when active */\r\n  }\r\n  \r\n  /* Styling for success state of the error container */\r\n  .js-errorMessageContainer .login-error-message-container.success {\r\n    background: var(--success); /* Background color for success state */\r\n    border: 1.5px solid var(--success) !important; /* Border color for success state */\r\n  }\r\n  \r\n  /* Styling for success icon in the error container */\r\n  .js-errorMessageContainer .login-error-message-container.success .icon {\r\n    color: var(--success);      /* Icon color for success state */\r\n  }\r\n  \r\n  /* Keyframes animation for spinning */\r\n  @keyframes spin {\r\n    100% {\r\n        transform: rotate(360deg); /* Rotate the element fully */\r\n    }\r\n  }\r\n  \r\n  /* Styling for elements with the spin class */\r\n  .spin, \r\n  .js-spin\r\n  {\r\n    animation: spin 1s infinite linear; /* Apply the spinning animation */\r\n  }\r\n\r\n  svg.spin, \r\n  svg.js-spin\r\n  {\r\n    width: 25px;\r\n    height: 25px;\r\n  }\r\n  \r\n  /* Styling for show password button */\r\n  .cssShowPassword {\r\n    position: absolute;         /* Absolute positioning for the button */\r\n    bottom: 0;                  /* Position at the bottom of the container */\r\n    right: 0;                   /* Position at the right of the container */\r\n    height: 50px;               /* Set height for the button */\r\n    width: 50px;                /* Set width for the button */\r\n    background: #000;           /* Background color for the button */\r\n    color: #fff;                /* Text color for the button */\r\n    fill: #fff;                 /* Icon fill color for the button */\r\n    display: flex;              /* Display as flex for centering content */\r\n    align-items: center;        /* Center vertically */\r\n    justify-content: center;    /* Center horizontally */\r\n  }\r\n  \r\n  /* Styling for SVG icon inside show password button */\r\n  .cssShowPassword svg {\r\n    width: 25px;                /* Set width of the SVG icon */\r\n    height: 25px;               /* Set height of the SVG icon */\r\n  }\r\n  "]}